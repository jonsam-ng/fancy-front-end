(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{497:function(e,t,r){"use strict";r.r(t);var o=r(2),n=Object(o.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("Badges",{attrs:{content:[{type:"tip",text:"核心"}]}}),e._v(" "),t("TimeToRead"),e._v(" "),t("h2",{attrs:{id:"目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[e._v("#")]),e._v(" 目录")]),e._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#目录"}},[e._v("目录")])]),t("li",[t("a",{attrs:{href:"#沙箱"}},[e._v("沙箱")]),t("ul",[t("li",[t("a",{attrs:{href:"#css-沙箱"}},[e._v("CSS 沙箱")])]),t("li",[t("a",{attrs:{href:"#js-沙箱"}},[e._v("JS 沙箱")])])])]),t("li",[t("a",{attrs:{href:"#shadow-dom"}},[e._v("Shadow DOM")])]),t("li",[t("a",{attrs:{href:"#windowproxy"}},[e._v("WindowProxy")])]),t("li",[t("a",{attrs:{href:"#object-getownpropertydescriptor"}},[e._v("Object.getOwnPropertyDescriptor()")])]),t("li",[t("a",{attrs:{href:"#window-top-parent-self-window"}},[e._v("Window.top/parent/self/window")])])])]),t("p"),e._v(" "),t("h2",{attrs:{id:"沙箱"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#沙箱"}},[e._v("#")]),e._v(" 沙箱")]),e._v(" "),t("p",[e._v("在微服务中，主要要解决两个沙箱问题，分别是 CSS 沙箱和 JS 沙箱。对于 JS 沙箱而言，主要也要解决两个问题，一个是沙箱的隔离作用，二是沙箱间、沙箱与基座应用间的通信机制。在沙箱这一部分，我们主要解析 CSS 沙箱的实现原理和 JS 沙箱的实现原理。")]),e._v(" "),t("h3",{attrs:{id:"css-沙箱"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-沙箱"}},[e._v("#")]),e._v(" CSS 沙箱")]),e._v(" "),t("p",[e._v("实现 CSS 沙箱主要有以下几种方案：")]),e._v(" "),t("ul",[t("li",[e._v("BEM CSS。给 CSS class 添加约定的类进行区分。")]),e._v(" "),t("li",[e._v("Module CSS。模块化的 CSS 能够让 CSS 在一定的 scope 以内生效。")]),e._v(" "),t("li",[e._v("CSS In JS。CSS-in-JS 的实现方法上区分大体分为两种：唯一 CSS 选择器和内联样式（Unique Selector VS Inline Styles）。这两种方法都可以达到隔离 CSS 的作用。参考："),t("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2017/04/css_in_js.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("阮一峰：CSS in JS 简介"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("ShadowDOM")]),e._v(" "),t("li",[e._v("namespace：每个业务模块或者团队使用不同的样式前缀。")]),e._v(" "),t("li",[e._v("Dynamic StyleSheet：动态的注入或者删除样式表。")])]),e._v(" "),t("h3",{attrs:{id:"js-沙箱"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js-沙箱"}},[e._v("#")]),e._v(" JS 沙箱")]),e._v(" "),t("ul",[t("li",[e._v("代理沙箱（ProxySandbox）")]),e._v(" "),t("li",[e._v("快照沙箱（SnapshotSandbox）")])]),e._v(" "),t("h2",{attrs:{id:"shadow-dom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shadow-dom"}},[e._v("#")]),e._v(" Shadow DOM")]),e._v(" "),t("blockquote",[t("p",[e._v("Method of establishing and maintaining functional boundaries between DOM trees and how these trees interact with each other within a document, thus enabling better functional encapsulation within the DOM & CSS.")])]),e._v(" "),t("p",[e._v("Web components 的一个重要属性是封装 —— 可以将标记结构、样式和行为隐藏起来，并与页面上的其他代码相隔离，保证不同的部分不会混在一起，可使代码更加干净、整洁。其中，Shadow DOM 接口是关键所在，它可以将一个隐藏的、独立的 DOM 附加到一个元素上。")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("注意")]),e._v(" "),t("p",[e._v("Shadow DOM 不支持 IE 浏览器，查看"),t("a",{attrs:{href:"https://caniuse.com/?search=shadow%20DOM",target:"_blank",rel:"noopener noreferrer"}},[e._v("支持情况"),t("OutboundLink")],1),e._v("，但是可以通过 "),t("a",{attrs:{href:"https://github.com/webcomponents/polyfills/tree/master/packages/webcomponentsjs",target:"_blank",rel:"noopener noreferrer"}},[e._v("polyfill"),t("OutboundLink")],1),e._v(" 获取支持。")])]),e._v(" "),t("p",[e._v("参考：")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM",target:"_blank",rel:"noopener noreferrer"}},[e._v("Using shadow DOM"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://segmentfault.com/a/1190000019115050",target:"_blank",rel:"noopener noreferrer"}},[e._v("深入理解 Shadow DOM v1"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("参考：")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://juejin.cn/post/6920110573418086413",target:"_blank",rel:"noopener noreferrer"}},[e._v("15 分钟快速理解 qiankun 的 js 沙箱原理及其实现"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"windowproxy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#windowproxy"}},[e._v("#")]),e._v(" WindowProxy")]),e._v(" "),t("blockquote",[t("p",[e._v("A WindowProxy object is a wrapper for a Window object. A WindowProxy object exists in every browsing context. All operations performed on a WindowProxy object will also be applied to the underlying Window object it currently wraps. Therefore, interacting with a WindowProxy object is almost identical to directly interacting with a Window object. When a browsing context is navigated, the Window object its WindowProxy wraps is changed.")])]),e._v(" "),t("p",[e._v("参考：")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/WindowProxy",target:"_blank",rel:"noopener noreferrer"}},[e._v("WIKI：WindowProxy"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"object-getownpropertydescriptor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#object-getownpropertydescriptor"}},[e._v("#")]),e._v(" Object.getOwnPropertyDescriptor()")]),e._v(" "),t("blockquote",[t("p",[e._v("Object.getOwnPropertyDescriptor () 方法返回指定对象上一个自有属性对应的属性描述符。（自有属性指的是直接赋予该对象的属性，不需要从原型链上进行查找的属性）。")])]),e._v(" "),t("p",[e._v("该方法允许对一个属性的描述进行检索。在 Javascript 中， 属性 由一个字符串类型的 “名字”（name）和一个 “属性描述符”（property descriptor）对象构成。更多关于属性描述符类型以及他们属性的信息可以查看：Object.defineProperty.")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor",target:"_blank",rel:"noopener noreferrer"}},[e._v("MDN: Object.getOwnPropertyDescriptor()"),t("OutboundLink")],1)])]),e._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[e._v("Object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("defineProperty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" prop"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" descriptor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h2",{attrs:{id:"window-top-parent-self-window"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#window-top-parent-self-window"}},[e._v("#")]),e._v(" Window.top/parent/self/window")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/top",target:"_blank",rel:"noopener noreferrer"}},[e._v("Window.top"),t("OutboundLink")],1),e._v(": Returns a reference to the topmost window in the window hierarchy. This property is read only.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/parent",target:"_blank",rel:"noopener noreferrer"}},[e._v("Window.parent"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/self",target:"_blank",rel:"noopener noreferrer"}},[e._v("Window.self"),t("OutboundLink")],1),e._v(": Returns an object reference to the window object itself.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/window",target:"_blank",rel:"noopener noreferrer"}},[e._v("Window.window"),t("OutboundLink")],1),e._v(": Returns a reference to the current window.")])]),e._v(" "),t("p",[e._v("参考：")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window",target:"_blank",rel:"noopener noreferrer"}},[e._v("MDN：Window"),t("OutboundLink")],1)])])],1)}),[],!1,null,null,null);t.default=n.exports}}]);
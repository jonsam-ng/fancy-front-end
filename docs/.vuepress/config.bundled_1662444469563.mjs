// docs/.vuepress/config.ts
import { defineConfig4CustomTheme } from "vuepress/config";

// docs/.vuepress/config/htmlModules.ts
var htmlModule = {};
var htmlModules_default = htmlModule;

// docs/.vuepress/config/baiduCode.ts
var baiduCode_default = "634139bf8239f41da83be0a03473f9ff";

// docs/.vuepress/config/plugin.config.ts
import dayjs from "dayjs";
var plugin_config_default = [
  "vuepress-plugin-baidu-autopush",
  [
    "@vuepress/plugin-pwa",
    {
      serviceWorker: true,
      updatePopup: true
    }
  ],
  "vuepress-plugin-reading-time",
  [
    "vuepress-plugin-baidu-tongji",
    { hm: baiduCode_default }
  ],
  "fulltext-search",
  [
    "one-click-copy",
    {
      copySelector: [
        'div[class*="language-"] pre',
        'div[class*="aside-code"] aside'
      ],
      copyMessage: "\u590D\u5236\u6210\u529F",
      duration: 1e3,
      showInMobile: false
    }
  ],
  [
    "demo-block",
    {
      settings: {
        jsfiddle: false,
        codepen: true,
        horizontal: false
      }
    }
  ],
  [
    "vuepress-plugin-zooming",
    {
      selector: ".theme-vdoing-content img:not(.no-zoom)",
      options: {
        bgColor: "rgba(0,0,0,0.6)"
      }
    }
  ],
  [
    "vuepress-plugin-comment",
    {
      choosen: "gitalk",
      options: {
        clientID: "d3180fd85e7addd9c036",
        clientSecret: "933c6df009c1d8264e247ce9c1a68687dff0b5f6",
        repo: "fancy-front-end",
        owner: "jonsam-ng",
        admin: ["jonsam-ng"],
        pagerDirection: "last",
        id: "<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",
        title: "\u300C\u8BC4\u8BBA\u300D<%- frontmatter.title %>",
        labels: ["Gitalk", "Comment"],
        body: "\u9875\u9762\uFF1A<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"
      }
    }
  ],
  [
    "@vuepress/last-updated",
    {
      transformer: (timestamp, lang) => {
        return dayjs(timestamp).format("YYYY/MM/DD, HH:mm:ss");
      }
    }
  ],
  ["@renovamen/vuepress-plugin-katex", { strict: false }],
  [
    "@xzhi/add-copyright",
    {
      authorName: "jonsam",
      minLength: 100,
      noCopy: true
    }
  ],
  [
    "sitemap",
    {
      hostname: "https://source.jonsam.site"
    }
  ],
  ["seo", {}],
  "img-lazy",
  [
    "smplayer",
    {}
  ],
  {
    name: "custom-plugins",
    globalUIComponents: ["LastReadingPopup", "GlobalTip", "BlockToggle"]
  }
];

// docs/.vuepress/config/nav.config.ts
var nav_config_default = [
  {
    text: "React\u6E90\u7801",
    link: "/react/index/",
    items: [
      {
        text: "\u5F00\u59CB\u4E0A\u624B",
        link: "/react/index/"
      },
      {
        text: "\u57FA\u7840",
        link: "/react/basic/index/"
      },
      {
        text: "\u8C03\u5EA6\u5668\uFF08Scheduler\uFF09",
        link: "/react/scheduler/index/"
      },
      {
        text: "\u66F4\u65B0\u5668\uFF08Updater\uFF09",
        link: "/react/updater/index/"
      },
      {
        text: "\u6E32\u67D3\u5668\uFF08Render\uFF09",
        link: "/react/render/index/"
      },
      {
        text: "\u66F4\u65B0\u5468\u671F",
        link: "/react/update/index/"
      },
      {
        text: "hooks \u539F\u7406",
        link: "/react/hooks/index/"
      },
      {
        text: "\u603B\u7ED3",
        link: "/react/summary/index/"
      },
      {
        text: "\u{1F4D9} React\u6E90\u7801\u6F02\u6D41\u8BB0",
        link: "/react/tour/index/"
      }
    ]
  },
  {
    text: "Vue3\u6E90\u7801",
    link: "/vue3/index/",
    items: [
      {
        text: "\u5F00\u59CB\u4E0A\u624B",
        link: "/vue3/index/"
      },
      {
        text: "\u57FA\u7840",
        link: "/vue3/basic/index/"
      },
      {
        text: "reactivity",
        link: "/vue3/reactivity/index/"
      },
      {
        text: "runtime-core",
        link: "/vue3/runtime-core/index/"
      },
      {
        text: "runtime-dom",
        link: "/vue3/runtime-dom/index/"
      }
    ]
  },
  {
    text: "\u8FDB\u9636",
    link: "/web/",
    items: [
      {
        text: "Awesome Web",
        link: "/web/"
      },
      {
        text: "Awesome NodeJS",
        link: "/node/"
      }
    ]
  },
  {
    text: "\u8BDD\u9898",
    link: "/topic/"
  },
  {
    text: "\u66F4\u591A",
    link: "/nav/",
    items: [
      { text: "\u5BFC\u822A", link: "/nav/" },
      { text: "Q&A", link: "/qa/" },
      { text: "\u5E7B\u706F\u7247", link: `/slides/#/1` },
      { text: "\u5173\u4E8E", link: "/about/" }
    ]
  },
  {
    text: "\u7D22\u5F15",
    link: "/archives/",
    items: [
      { text: "\u5206\u7C7B", link: "/categories/" },
      { text: "\u6807\u7B7E", link: "/tags/" },
      { text: "\u5F52\u6863", link: "/archives/" }
    ]
  },
  { text: "\u535A\u5BA2", link: "https://www.jonsam.site" }
];

// docs/.vuepress/config/social.config.ts
var social_config_default = {
  icons: [
    {
      iconClass: "icon-youjian",
      title: "\u53D1\u90AE\u4EF6",
      link: "mailto:jonsam.ng@foxmail.com"
    },
    {
      iconClass: "icon-github",
      title: "GitHub",
      link: "https://github.com/jonsam-ng"
    },
    {
      iconClass: "icon-mao",
      title: "\u535A\u5BA2",
      link: "https://www.jonsam.site"
    },
    {
      iconClass: "icon-shuben",
      title: "\u6587\u6863",
      link: "https://docs.jonsam.site"
    },
    {
      iconClass: "icon-code",
      title: "\u673A\u5668\u5B66\u4E60",
      link: "https://ml.jonsam.site"
    }
  ]
};

// docs/.vuepress/config/head.config.ts
var head_config_default = [
  ["link", { rel: "icon", href: `/assets/img/favicon.ico` }],
  ["meta", { name: "referrer", content: "no-referrer-when-downgrade" }],
  ["meta", { name: "apple-mobile-web-app-capable", content: "yes" }],
  ["meta", { name: "apple-mobile-web-app-status-bar-style", content: "black" }],
  [
    "meta",
    {
      name: "keywords",
      content: "\u524D\u7AEF\u6E90\u7801,React\u6E90\u7801,Vue\u6E90\u7801,Vu3\u6E90\u7801,Webpack\u6E90\u7801"
    }
  ],
  ["meta", { name: "theme-color", content: "#3CB982" }],
  [
    "link",
    {
      rel: "stylesheet",
      href: "//at.alicdn.com/t/font_3314748_9xij1pv3h4i.css"
    }
  ]
];

// docs/.vuepress/config.ts
var siteName = "Fancy Front End";
var config_default = defineConfig4CustomTheme({
  theme: "vdoing",
  locales: {
    "/": {
      lang: "zh-CN",
      title: siteName,
      description: "\u524D\u7AEF\u6E90\u7801\u9605\u8BFB\u6808\uFF0C\u7CBE\u8BFB React\u3001Vue3 \u6E90\u7801"
    }
  },
  themeConfig: {
    nav: nav_config_default,
    sidebarDepth: 1,
    logo: `/assets/img/logo.png`,
    repo: "jonsam-ng/fancy-front-end",
    searchMaxSuggestions: 10,
    lastUpdated: "\u4E0A\u6B21\u66F4\u65B0",
    docsDir: "docs",
    editLinks: true,
    editLinkText: "\u7F16\u8F91",
    category: true,
    tag: true,
    archive: true,
    categoryText: "\u968F\u7B14",
    titleBadge: true,
    contentBgStyle: 6,
    updateBar: {
      showToArticle: true,
      moreArticle: "/archives"
    },
    rightMenuBar: true,
    sidebarOpen: true,
    pageButton: true,
    sidebar: "structuring",
    author: {
      name: "jonsam",
      link: "https://github.com/jonsam-ng"
    },
    blogger: {
      avatar: "https://cdn.staticaly.com/gh/jonsam-ng/image-hosting@master/oxygen-space/image.5a0lthv367k0.png",
      name: "Jonsam NG",
      slogan: "\u8BA9\u6709\u610F\u4E49\u7684\u4E8B\u53D8\u5F97\u6709\u610F\u601D\uFF0C\u8BA9\u6709\u610F\u601D\u7684\u4E8B\u53D8\u5F97\u6709\u610F\u4E49"
    },
    social: social_config_default,
    footer: {
      createYear: 2022,
      copyrightInfo: `${siteName} | Made by <a href="https://www.jonsam.site" target="_blank">Jonsam</a> by \u2764`
    },
    htmlModules: htmlModules_default
  },
  head: head_config_default,
  plugins: plugin_config_default,
  markdown: {
    lineNumbers: true,
    extractHeaders: ["h2", "h3", "h4", "h5", "h6"]
  },
  extraWatchFiles: [
    ".vuepress/config.ts",
    ".vuepress/config/htmlModules.ts",
    ".vuepress/config/nav.config.ts"
  ],
  configureWebpack: {
    node: {
      global: true,
      process: true,
      self: true
    }
  },
  pwa: {
    workboxOptions: {
      skipWaiting: true
    }
  }
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
